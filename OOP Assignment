# Base class
class Device:
    def __init__(self, brand, model):
        self.brand = brand
        self.model = model

    def device_info(self):
        return f"{self.brand} {self.model}"


# Derived class (inheritance from Device)
class Smartphone(Device):
    def __init__(self, brand, model, storage, battery):
        super().__init__(brand, model)  # Call base class constructor
        self.storage = storage
        self.battery = battery

    def make_call(self, number):
        print(f"Calling {number}... ðŸ“ž")

    def charge(self, percent):
        self.battery += percent
        if self.battery > 100:
            self.battery = 100
        print(f"Battery charged to {self.battery}% ðŸ”‹")

    def phone_info(self):
        return f"{self.device_info()} | Storage: {self.storage}GB | Battery: {self.battery}%"


# Creating objects
phone1 = Smartphone("Samsung", "Galaxy S24", 256, 80)
phone2 = Smartphone("Apple", "iPhone 15", 128, 50)

# Using methods
print(phone1.phone_info())
phone1.make_call("+254700000000")
phone1.charge(15)

print(phone2.phone_info())
